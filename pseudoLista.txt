insert (lista, valor){
	
	se (lista vazia)

		cria nodo;
		grava nodo na memoria;

		insere valor no nodo;

		seta anteror e proximo como 0;

		define o nodo como primeiro da lista;
		finaliza funcao;

	se (o valor a ser inserido for menor que o menor valor presente na lista)

		cria o nodo;

		grava nodo na memoria;
		insere o valor no nodo;

		seta o anterior como 0;

		proximo do novo nodo indica o primeiro elemento da lista;

		anterior do primeiro da lista indica o novo nodo;

		comeco da lista indica o novo nodo;
		finaliza a funcao;
	

se (o valor a ser inserido e maior que o maior valor presente na lista)

}
		
		cia o nodo;
		grava na memoria;
		insere o valor no nodo;
		seta o proximo como 0;
		seta o anterior como o ultim elemento da lista;
		seta o proximo do ultimo elemento da lista para o novo nodo;
		finaliza a funcao;
	senao 
		loop na lista ate o valor do elemento for menor quer o valor inserido e o prixmo valor for maior ou igual ao valor inserido
		cria nodo;
		grava na memoria;
		insere valor no novo nodo;
		seta o anterior como o nodo com valor menor;
		seta como o proximo o nodo com valor maior;
		indica como o proximo do nodo com valor menor o novo nodo;
		indica como o anterior do nodo com valor maior o novo nodo;
		finaliza a funcao;
fim insert;

delete_indice (lista, indice)
	se (lista vazia)
		mostra mensagem de erro;
		finaliza a funcao;
	loop ate chegar no indice indicado
		se (fim da lista)
			mostra mensagem de erro;
			finaliza a funcao;

	se (for o primeiro nodo)
		carrega o proximo;
		proximo.anterior indica 0;
		lista indica proximo;
		mostra mensagem;
		finaliza funcao;	
	se (nao for o indice do primeiro ou do ultimo nodo)
		carrega o proximo nodo;
		carrega o nodo anterior;
		indica anterior.proximo para o proximo;
		indica proximo.anterior 
		exclui nodo;
		mostra mensagem;
		finaliza funcao;

	se (for o ultimo nodo)
		carrega o anterior;
		anterior.proximo indica 0;
		libera o nodo;
		mostra mensagem;
		finaliza funcao;
fim delete_indice;


delete_valor(lista, valor)
	
	se (lista vazia)
		mostra mensagem de erro;
		finaliza funcao;
	
	se (valor for o primeiro da lista)
		carrega o proximo;
		proximo.anterior indica 0;
		lista indica proximo;
		mostra mensagem;
		finaliza funcao;	
	se (nao for o valor do primeiro ou do ultimo nodo)
		carrega o proximo nodo;
		carrega o nodo anterior;
		indica anterior.proximo para o proximo;
		indica proximo.anterior 
		exclui nodo;
		mostra mensagem;
		finaliza funcao;

	se (for o valor do ultimo nodo)
		carrega o anterior;
		anterior.proximo indica 0;
		libera o nodo;
		mostra mensagem;
		finaliza funcao;
fim delete_valor;


